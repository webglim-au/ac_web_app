
import { useState } from 'react';
import { Box, Typography } from "@mui/material";
import HRScreenTemplate from "@components/HR/dashboard/HRScreenTemplate";
import ScreenHeading from "@components/common/ScreenHeading";
import StickyNote from "@components/common/StickyNote";
import DetailedNotes from "@components/common/DetailedNotes";
import MainTab from '@components/HR/recruitment/mainTab';
import ContentSection from '@components/HR/recruitment/ContentSection';
import RecruitmentApplicationsIcon from '@components/common/IconComponents/RecruitmentApplications';
import RecruitmentJobPositionIcon from '@components/common/IconComponents/RecruitmentJobPosition';
import RecruitmentOpenPositionsIcon from '@components/common/IconComponents/RecruitmentOpenPositions';
import RecruitmentOfferLetterIcon from '@components/common/IconComponents/RecruitmentOfferLetter';
import EditIcon from '@components/common/IconComponents/EditIcon';
import IconTextButton from '@components/common/IconTextButton';
import CustomButton from '@components/common/StyledButton';
import ResumeIcon from '@components/common/IconComponents/ResumeIcon';
import CoverLetterIcon from '@components/common/IconComponents/CoverLetterIcon';
import CloseIcon from "@mui/icons-material/Close";
import CheckIcon from "@mui/icons-material/Check";
import StatusChip from '@components/common/StatusChip';
import PhoneIcon from '@components/common/IconComponents/PhoneIcon';
import EmailIcon from '@components/common/IconComponents/EmailIcon';


import { JobApplicationsComponent } from '@components/HR/recruitment/JobApplicationsComponent';
import { BlacklistedComponent } from '@components/HR/recruitment/BlackListedComponents';
import { ArchivedComponent } from '@components/HR/recruitment/ArchivedComponent';
import { InterviewComponent } from '@components/HR/recruitment/InterviewsComponent';
import { PrescreeningComponent } from '@components/HR/recruitment/PrescreeningComponent';
import { ReferencesComponent } from '@components/HR/recruitment/ReferencesComponent';
// RecruitmentPage.tsx
// RecruitmentPage.tsx
export function RecruitmentPage() {

    const [tabs, setTabs] = useState([
        {
            label: 'Applications',
            icon: <RecruitmentApplicationsIcon />,
            selected: true,
            selectedSubTabIndex: 0 // Default to "Job Applications"
        },
        {
            label: 'Job Position',
            icon: <RecruitmentJobPositionIcon />,
            selected: false,
            selectedSubTabIndex: 0
        },
        {
            label: 'Open Positions',
            icon: <RecruitmentOpenPositionsIcon />,
            selected: false,
            selectedSubTabIndex: 0
        },
        {
            label: 'Offer Letter',
            icon: <RecruitmentOfferLetterIcon />,
            selected: false,
            selectedSubTabIndex: 0
        }
    ]);
    const [applicationsData] = useState([
        {
            id: 1,
            name: 'John Doe',
            position: 'Software Engineer',
            email: 'john.doe@email.com',
            phone: '+1 234-567-8900',
            status: 'Under Review',
            appliedDate: '2024-01-15'
        },
        {
            id: 2,
            name: 'Jane Smith',
            position: 'Product Manager',
            email: 'jane.smith@email.com',
            phone: '+1 234-567-8901',
            status: 'Interview Scheduled',
            appliedDate: '2024-01-14'
        },
        {
            id: 3,
            name: 'Mike Johnson',
            position: 'UX Designer',
            email: 'mike.johnson@email.com',
            phone: '+1 234-567-8902',
            status: 'Rejected',
            appliedDate: '2024-01-13'
        },
        {
            id: 4,
            name: 'Sarah Wilson',
            position: 'Data Analyst',
            email: 'sarah.wilson@email.com',
            phone: '+1 234-567-8903',
            status: 'Hired',
            appliedDate: '2024-01-12'
        },
        {
            id: 5,
            name: 'David Brown',
            position: 'Software Engineer',
            email: 'david.brown@email.com',
            phone: '+1 234-567-8904',
            status: 'Under Review',
            appliedDate: '2024-01-11'
        }
    ]);
    // Define table columns
    const columns = [
        { id: 'name', label: 'Name', minWidth: 150 },
        { id: 'position', label: 'Position', minWidth: 150 },
        { id: 'email', label: 'Email', minWidth: 200 },
        { id: 'phone', label: 'Phone', minWidth: 150 },
        { id: 'status', label: 'Status', minWidth: 120, align: 'center' as const },
        { id: 'appliedDate', label: 'Applied Date', minWidth: 120, align: 'center' as const }
    ];

    const handleSearch = (searchTerm: string) => {
        console.log('Searching for:', searchTerm);
        // You can implement custom search logic here if needed
        // The component already handles basic filtering
    };
    const handleTabClick = (index: number) => {
        setTabs(tabs.map((tab, i) => ({
            ...tab,
            selected: i === index
        })));
    };

    const handleSubTabClick = (tabIndex: number, subTabIndex: number) => {
        setTabs(tabs.map((tab, i) =>
            i === tabIndex
                ? { ...tab, selectedSubTabIndex: subTabIndex }
                : tab
        ));
    };


    return (
        <HRScreenTemplate>
            <ScreenHeading title="Recruitment" />
            {/* <Box sx={{ p: 2, backgroundColor: "white", borderRadius: 2, m: 2 }}>
                <Typography>Recruitment functionality will be implemented here...</Typography>
            </Box>
            <StatusChip label="Active" colorKey="mustard" />
            <StatusChip label="Error" colorKey="maroon" />
            <StatusChip label="Draft" colorKey="grey" border={true} />
            <StatusChip label="Premium" colorKey="purple" />



            <StatusChip label="green" colorKey="green" />
            <StatusChip label="pending" colorKey="pending" />
            <StatusChip label="completed" colorKey="completed" border={true} />
            <StatusChip label="active" colorKey="active" />
            <StatusChip label="inactive" colorKey="inactive" />

            <Box gap={2} p={2} justifyContent={"space-between"} display={"flex"} width={"100%"}>
                <CustomButton
                    text="Primary"
                    bgColor="#1976d2"
                    onClick={() => alert("Clicked!")}
                />


                <CustomButton
                    text="Cancel"
                    borderColor="#6f2d7a"
                    bgColor="#6f2d7a"
                    fontWeight="600"
                    color="white"
                    startIcon={<CloseIcon sx={{ fontSize: 20 }} />} // ✅ bigger cross
                    onClick={() => alert("Clicked!")}
                    endIcon={<CheckIcon sx={{ fontSize: 20 }} />}
                />
                <CustomButton
                    text="Save"
                    borderColor="#6f2d7a"
                    bgColor="#6f2d7a"
                    fontWeight="600"
                    color="white"
                    startIcon={<CheckIcon sx={{ fontSize: 20 }} />} // ✅ bigger cross
                    onClick={() => alert("Clicked!")}

                />

                <CustomButton
                    text="Send Pre-screening forms"
                    //  borderColor="#6f2d7a"
                    //  bgColor="transparent"
                    fontWeight="600"
                    color="#6f2d7a"
                    onClick={() => alert("Clicked!")}

                />
                <CustomButton
                    text="Archive"
                    borderColor="#6f2d7a"
                    color="#6f2d7a"
                    fontWeight="600"
                    bgColor="#fff"
                    onClick={() => alert("Clicked!")}

                />
                <CustomButton
                    text="Pre-screening form sent"
                    disabled
                />

                <IconTextButton
                    icon={<EditIcon />}
                    text="Edit"
                // onClick={() => alert("Edit clicked")}
                />

                <IconTextButton
                    icon={<EditIcon color="#CBC8C8" />}
                    text="Edit"
                    disabled
                />

                <IconTextButton
                    icon={<ResumeIcon />}
                    text="Resume"
                    color={"black"}
                    fontWeight={"400"}
                    fontSize={"15px"}
                />


                <IconTextButton
                    icon={<CoverLetterIcon />}
                    text="Cover Letter"
                    color={"black"}
                    fontWeight={"400"}
                    fontSize={"15px"}
                />
            </Box>
            <IconTextButton
                icon={<PhoneIcon />}
                text="+61 2 9123 4567"
                color={"black"}
                fontWeight={"400"}
                fontSize={"15px"}
            />

            <IconTextButton
                icon={<EmailIcon color={"#6F2D7A"} />}
                text="alex.thompson@techcorp.com"
                color={"black"}
                fontWeight={"400"}
                fontSize={"15px"}
            />


            {/* <StickyNote title={"note "} description={" DescriptionDes cription DescriptionDes criptionDescrip tionDescription"} /> */}
            {/* <DetailedNotes /> */}

            {/*  */}


            <MainTab tabs={tabs} onTabClick={handleTabClick} onSubTabClick={handleSubTabClick} />
            <Box sx={{ minHeight: '100vh', }}>

                <JobApplicationsComponent />
                <PrescreeningComponent />

            </Box>

        </HRScreenTemplate>
    );
}